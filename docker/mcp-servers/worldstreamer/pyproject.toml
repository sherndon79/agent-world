[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "mcp-worldstreamer"
version = "0.1.0"
description = "MCP server for WorldStreamer - Real-time world streaming control tools"
readme = "README.md"
requires-python = ">=3.8"
authors = [
    {name = "agenTWâˆžrld Team", email = "team@agentworld.ai"}
]
keywords = ["mcp", "isaac-sim", "webrtc", "streaming", "ai-agent"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License", 
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "mcp>=1.0.0",
    "httpx>=0.24.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.20.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "mypy>=1.0.0"
]

[project.scripts]
mcp-worldstreamer = "mcp_agent_worldstreamer:main"

[project.urls]
Homepage = "https://github.com/your-org/agent-world"
Repository = "https://github.com/your-org/agent-world"
Issues = "https://github.com/your-org/agent-world/issues"
Documentation = "https://docs.agentworld.ai"

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 100

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"